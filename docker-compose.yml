version: '3.4'
services:
  app: &app_base
    container_name: 'blackcandy_app'
    image: blackcandy/blackcandy
    volumes:
      - ./log:/app/log
      - ${BLACK_CANDY_MEDIA_PATH}:/media_data
      - production_public_data:/app/public
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      REDIS_DATA_URL: redis://redis:6379/0
      REDIS_CACHE_URL: redis://redis:6379/1
      REDIS_SIDEKIQ_URL: redis://redis:6379/2
      MEDIA_PATH: /media_data
      SECRET_KEY_BASE: ${BLACK_CANDY_SECRET_KEY_BASE}
    depends_on:
      - postgres
      - redis
  postgres:
    container_name: 'blackcandy_postgres'
    image: groonga/pgroonga:2.1.8-alpine-11.1
    volumes:
      - production_db_data:/var/lib/postgresql/data
  redis:
    container_name: 'blackcandy_redis'
    image: redis:4.0-alpine
    volumes:
      - production_redis_data:/data
  worker:
    container_name: 'blackcandy_worker'
    <<: *app_base
    command: bundle exec sidekiq
  web:
    container_name: 'blackcandy_web'
    image: nginx:1.16-alpine
    volumes:
      - ./log:/var/www/black_candy/log
      - ${BLACK_CANDY_MEDIA_PATH}:/media_data
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - production_public_data:/var/www/black_candy/public
      - production_certbot_conf:/etc/letsencrypt
      - production_certbot_public:/var/www/certbot
    command: [ "nginx", "-g", "daemon off;" ]
    depends_on:
      - app
      - worker
    ports:
      - 80:80
      - 443:443
  certbot:
    container_name: 'blackcandy_certbot'
    image: certbot/certbot:v1.0.0
    volumes:
      - production_certbot_conf:/etc/letsencrypt
      - production_certbot_public:/var/www/certbot
volumes:
  production_db_data:
  production_redis_data:
  production_public_data:
  production_certbot_conf:
  production_certbot_public:
